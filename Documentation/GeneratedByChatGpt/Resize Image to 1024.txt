Generated by ChatGPT

Here is a sample method that demonstrates how to resize an image in C# while maintaining the aspect ratio:

Copy code
using System.Drawing;

public Image ResizeImage(Image image)
{
    int maxWidth = 1024;
    int maxHeight = 1024;

    // Calculate the new width and height of the image based on the maximum width and height
    int newWidth, newHeight;
    if (image.Width > maxWidth || image.Height > maxHeight)
    {
        double widthRatio = (double)image.Width / maxWidth;
        double heightRatio = (double)image.Height / maxHeight;
        if (widthRatio > heightRatio)
        {
            newWidth = maxWidth;
            newHeight = (int)(image.Height / widthRatio);
        }
        else
        {
            newWidth = (int)(image.Width / heightRatio);
            newHeight = maxHeight;
        }
    }
    else
    {
        newWidth = image.Width;
        newHeight = image.Height;
    }

    // Create a new image with the calculated width and height
    Image resizedImage = new Bitmap(newWidth, newHeight);

    // Draw the original image onto the new image using high quality resampling
    using (Graphics g = Graphics.FromImage(resizedImage))
    {
        g.CompositingQuality = System.Drawing.Drawing2D.CompositingQuality.HighQuality;
        g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic;
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;
        g.DrawImage(image, 0, 0, newWidth, newHeight);
    }

    // Return the resized image
    return resizedImage;
}